{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 12,
      "metadata": {
        "description": "The name of the HPC cluster, also used as the head node name and the host name prefix of the domain controller. It must contain between 3 and 12 characters with lowercase letters and numbers, and must start with a letter."
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "hpc.local",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the private domain forest which will be created by this template, for example 'hpc.local'."
      }
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "The Azure SQL Server name."
      }
    },
    "ManagementDBServiceTier": {
      "type": "string",
      "defaultValue": "Standard_S3",
      "allowedValues": [
        "Standard_S0",
        "Standard_S1",
        "Standard_S2",
        "Standard_S3",
        "Standard_S4",
        "Standard_S6",
        "Standard_S7",
        "Standard_S9",
        "Standard_S12",
        "Premium_P1",
        "Premium_P2",
        "Premium_P3",
        "Premium_P4",
        "Premium_P6",
        "Premium_P11",
        "Premium_P15"
      ],
      "metadata": {
        "description": "The service tier of the Azure SQL database for HPC Management."
      }
    },
    "SchedulerDBServiceTier": {
      "type": "string",
      "defaultValue": "Standard_S4",
      "allowedValues": [
        "Standard_S0",
        "Standard_S1",
        "Standard_S2",
        "Standard_S3",
        "Standard_S4",
        "Standard_S6",
        "Standard_S7",
        "Standard_S9",
        "Standard_S12",
        "Premium_P1",
        "Premium_P2",
        "Premium_P3",
        "Premium_P4",
        "Premium_P6",
        "Premium_P11",
        "Premium_P15"
      ],
      "metadata": {
        "description": "The service tier of the Azure SQL database for HPC Scheduler."
      }
    },
    "MonitoringDBServiceTier": {
      "type": "string",
      "defaultValue": "Standard_S0",
      "allowedValues": [
        "Standard_S0",
        "Standard_S1",
        "Standard_S2",
        "Standard_S3",
        "Standard_S4",
        "Standard_S6",
        "Standard_S7",
        "Standard_S9",
        "Standard_S12",
        "Premium_P1",
        "Premium_P2",
        "Premium_P3",
        "Premium_P4",
        "Premium_P6",
        "Premium_P11",
        "Premium_P15"
      ],
      "metadata": {
        "description": "The service tier of the Azure SQL database for HPC Monitoring."
      }
    },
    "ReportingDBServiceTier": {
      "type": "string",
      "defaultValue": "Standard_S0",
      "allowedValues": [
        "Standard_S0",
        "Standard_S1",
        "Standard_S2",
        "Standard_S3",
        "Standard_S4",
        "Standard_S6",
        "Standard_S7",
        "Standard_S9",
        "Standard_S12",
        "Premium_P1",
        "Premium_P2",
        "Premium_P3",
        "Premium_P4",
        "Premium_P6",
        "Premium_P11",
        "Premium_P15"
      ],
      "metadata": {
        "description": "The service tier of the Azure SQL database for HPC Reporting."
      }
    },
    "DiagnosticsDBServiceTier": {
      "type": "string",
      "defaultValue": "Standard_S0",
      "allowedValues": [
        "Standard_S0",
        "Standard_S1",
        "Standard_S2",
        "Standard_S3",
        "Standard_S4",
        "Standard_S6",
        "Standard_S7",
        "Standard_S9",
        "Standard_S12",
        "Premium_P1",
        "Premium_P2",
        "Premium_P3",
        "Premium_P4",
        "Premium_P6",
        "Premium_P11",
        "Premium_P15"
      ],
      "metadata": {
        "description": "The service tier of the Azure SQL database for HPC Diagnostics."
      }
    },
    "sqlLoginName": {
      "type": "string",
      "defaultValue": "hpcsql",
      "metadata": {
        "description": "Sql login name."
      }
    },
    "sqlLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Sql login password."
      }
    },
    "headNodeOS": {
      "type": "string",
      "defaultValue": "WindowsServer2016",
      "allowedValues": [
        "WindowsServer2012R2",
        "WindowsServer2016",
        "CustomImage"
      ],
      "metadata": {
        "description": "The operating system of the head node."
      }
    },
    "headNodeImageResourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.Compute/images/xxx",
      "metadata": {
        "description": "Specify only when 'CustomImage' selected for headNodeOS. The resource Id of the head node image, it can be a managed VM image in your own subscription (/subscriptions/&lt;SubscriptionId&gt;/resourceGroups/&lt;ResourceGroupName&gt;/providers/Microsoft.Compute/images/&lt;ImageName&gt;) or a shared VM image from Azure Shared Image Gallery (/subscriptions/&lt;SubscriptionId&gt;/resourceGroups/&lt;ResourceGroupName&gt;/providers/Microsoft.Compute/galleries/&lt;GalleryName&gt;/images/&lt;ImageName&gt;/versions/&lt;ImageVersion&gt;)."
      }
    },
    "headNodeOsDiskType": {
      "type": "string",
      "defaultValue": "Premium_SSD",
      "allowedValues": [
        "Standard_HDD",
        "Standard_SSD",
        "Premium_SSD"
      ],
      "metadata": {
        "description": "The disk type of head node VM. Note that Premium_SSD only supports some VM sizes, see <a href='https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-windows-sizes' target='_blank'>Azure VM Sizes</a>"
      }
    },
    "headNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS4_v2",
      "metadata": {
        "description": "The VM size of the head node, all available VM sizes in Azure can be found at <a href='https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-windows-sizes' target='_blank'>Azure VM Sizes</a>. Note that some VM sizes in the list are only available in some particular locations. Please check the availability and the price of the VM sizes at https://azure.microsoft.com/pricing/details/virtual-machines/windows/ before deployment."
      }
    },
    "computeNodeNamePrefix": {
      "type": "string",
      "defaultValue": "IaaSCN",
      "minLength": 1,
      "maxLength": 12,
      "metadata": {
        "description": "The name prefix of the compute nodes. It must be no more than 12 characters, begin with a letter, and contain only letters, numbers and hyphens. For example, if 'IaaSCN' is specified, the compute node names will be 'IaaSCN000', 'IaaSCN001', ..."
      }
    },
    "computeNodeNumber": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "The number of the compute nodes."
      }
    },
    "computeNodeImage": {
      "type": "string",
      "defaultValue": "WindowsServer2016",
      "allowedValues": [
        "WindowsServer2008R2",
        "WindowsServer2012",
        "WindowsServer2012R2",
        "WindowsServer2016",
        "WindowsServer2019",
        "WindowsServer2012R2WithExcel",
        "WindowsServer2016WithExcel",
        "CustomImage"
      ],
      "metadata": {
        "description": "The VM image of the compute nodes."
      }
    },
    "computeNodeImageResourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.Compute/images/xxx",
      "metadata": {
        "description": "Specify only when 'CustomImage' selected for computeNodeImage. The resource Id of the compute node image, it can be a managed VM image in your own subscription (/subscriptions/&lt;SubscriptionId&gt;/resourceGroups/&lt;ResourceGroupName&gt;/providers/Microsoft.Compute/images/&lt;ImageName&gt;) or a shared VM image from Azure Shared Image Gallery (/subscriptions/&lt;SubscriptionId&gt;/resourceGroups/&lt;ResourceGroupName&gt;/providers/Microsoft.Compute/galleries/&lt;GalleryName&gt;/images/&lt;ImageName&gt;/versions/&lt;ImageVersion&gt;)."
      }
    },
    "computeNodeOsDiskType": {
      "type": "string",
      "defaultValue": "Standard_HDD",
      "allowedValues": [
        "Standard_HDD",
        "Standard_SSD",
        "Premium_SSD"
      ],
      "metadata": {
        "description": "The disk type of compute node VM. Note that Premium_SSD only supports some VM sizes, see <a href='https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-windows-sizes' target='_blank'>Azure VM Sizes</a>"
      }
    },
    "computeNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "The VM size of the compute nodes, all available VM sizes in Azure can be found at <a href='https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-windows-sizes' target='_blank'>Azure VM Sizes</a>. Note that some VM sizes in the list are only available in some particular locations. Please check the availability and the price of the VM sizes at https://azure.microsoft.com/pricing/details/virtual-machines/windows/ before deployment."
      }
    },
    "availabilitySetOption": {
      "type": "string",
      "defaultValue": "Auto",
      "allowedValues": [
        "AllNodes",
        "ComputeNodes",
        "None",
        "Auto"
      ],
      "metadata": {
        "description": "Specify whether you want to create the HPC nodes in an Azure availability set. Select 'AllNodes' to create both head node(s) and compute nodes in an availability set; select 'ComputeNodes' to only create compute nodes in an availability set; select 'Auto' to only create RDMA capable nodes in availability set; select 'None' not to create an availability set."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "hpcadmin",
      "metadata": {
        "description": "Administrator user name for the virtual machines and the Active Directory domain."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password for the virtual machines and the Active Directory domain. Password must meet complexity requirements, see https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/password-must-meet-complexity-requirements"
      }
    },
    "vaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the KeyVault in which the certificate is stored."
      }
    },
    "vaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group of the KeyVault in which the certificate is stored."
      }
    },
    "certificateUrl": {
      "type": "string",
      "metadata": {
        "description": "Url of the certificate with version in KeyVault e.g. https://testault.vault.azure.net/secrets/testcert/b621es1db241e56a72d037479xab1r7."
      }
    },
    "certThumbprint": {
      "type": "string",
      "metadata": {
        "description": "Thumbprint of the certificate."
      }
    },
    "createPublicIPAddressForHeadNode": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Indicates whether to create a public IP address for head node."
      }
    },
    "enableAcceleratedNetworking": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Specify whether to create the Azure VMs with accelerated networking or not. Note accelerated networking is supported only for some VM sizes. If you specify it as 'Yes', you must specify accelerated networking supported VM sizes for all the VMs in the cluster. More information about accelerated networking please see https://docs.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-powershell."
      }
    },
    "headNodeDataDiskCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        4,
        8
      ],
      "metadata": {
        "description": "The number of data disks attached to the head node VM."
      }
    },
    "headNodeDataDiskSize": {
      "type": "int",
      "defaultValue": 128,
      "allowedValues": [
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096
      ],
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the head node VM."
      }
    },
    "headNodeDataDiskType": {
      "type": "string",
      "defaultValue": "Standard_HDD",
      "allowedValues": [
        "Standard_HDD",
        "Standard_SSD",
        "Premium_SSD"
      ],
      "metadata": {
        "description": "Head node data disk type. Note that Premium_SSD only supports some VM sizes, see <a href='https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-windows-sizes' target='_blank'>Azure VM Sizes</a>"
      }
    },
    "computeNodeDataDiskCount": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [
        0,
        1,
        2,
        4,
        8
      ],
      "metadata": {
        "description": "The number of data disks attached to the compute node VM."
      }
    },
    "computeNodeDataDiskSize": {
      "type": "int",
      "defaultValue": 128,
      "allowedValues": [
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096
      ],
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the compute node VM."
      }
    },
    "computeNodeDataDiskType": {
      "type": "string",
      "defaultValue": "Standard_HDD",
      "allowedValues": [
        "Standard_HDD",
        "Standard_SSD",
        "Premium_SSD"
      ],
      "metadata": {
        "description": "Compute node data disk type. Note that Premium_SSD only supports some VM sizes, see <a href='https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes' target='_blank'>Azure VM Sizes</a>"
      }
    },
    "useSpotInstanceForComputeNodes": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Specify whether you want to use the experimental feature to create compute nodes as <a href='https://azure.microsoft.com/pricing/spot/' target='_blank'>Azure Spot instances</a>. Note that it is not recommended to use this feature in production cluster."
      }
    }
  },
  "variables": {
    "clusterName": "[trim(parameters('clusterName'))]",
    "domainName": "[trim(parameters('domainName'))]",
    "vaultName": "[trim(parameters('vaultName'))]",
    "vaultResourceGroup": "[trim(parameters('vaultResourceGroup'))]",
    "certThumbprint": "[trim(parameters('certThumbprint'))]",
    "sqlServerName": "[toLower(trim(parameters('sqlServerName')))]",
    "computeNodeNamePrefix": "[trim(parameters('computeNodeNamePrefix'))]",
    "emptyArray": [],
    "diskTypes": {
      "Standard_HDD": "Standard_LRS",
      "Standard_SSD": "StandardSSD_LRS",
      "Premium_SSD": "Premium_LRS"
    },
    "headNodeDataDisks": {
      "copy": [
        {
          "name": "hnDataDisks",
          "count": "[if(equals(parameters('headNodeDataDiskCount'), 0), 1, parameters('headNodeDataDiskCount'))]",
          "input": {
            "lun": "[copyIndex('hnDataDisks')]",
            "createOption": "Empty",
            "diskSizeGB": "[parameters('headNodeDataDiskSize')]",
            "managedDisk": {
              "storageAccountType": "[variables('diskTypes')[parameters('headNodeDataDiskType')]]"
            }
          }
        }
      ]
    },
    "storageAccountName": "[concat('hpc', uniqueString(resourceGroup().id, variables('clusterName')))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/22",
    "virtualNetworkName": "[concat(variables('clusterName'),'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "privateClusterFQDN": "[concat(toLower(variables('clusterName')), '.', variables('domainName'))]",
    "publicIPName": "[concat(variables('clusterName'),'publicip')]",
    "publicIPDNSNameLabel": "[concat(toLower(variables('clusterName')), uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Dynamic",
    "publicIpAddressId": {
      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
    },
    "availabilitySetName": "[concat(variables('clusterName'), '-avset')]",
    "availabilitySet": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
    },
    "uniqueSuffix": "[uniqueString(variables('subnetRef'))]",
    "uniqueNicSuffix": "[concat('-nic-', variables('uniqueSuffix'))]",
    "nicNameHN": "[concat(variables('clusterName'), variables('uniqueNicSuffix'))]",
    "nsgName": "[concat('hpcnsg-',uniquestring(resourceGroup().id, variables('subnetRef')))]",
    "networkSecurityGroupId": {
      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
    },
    "rdmaASeries": [
      "Standard_A8",
      "Standard_A9"
    ],
    "cnRDMACapable": "[or(contains(variables('rdmaASeries'), parameters('computeNodeVMSize')), contains(toLower(split(parameters('computeNodeVMSize'), '_')[1]), 'r'))]",
    "hnRDMACapable": "[or(contains(variables('rdmaASeries'), parameters('headNodeVMSize')), contains(toLower(split(parameters('headNodeVMSize'), '_')[1]), 'r'))]",
    "createHNInAVSet": "[or(equals(parameters('availabilitySetOption'), 'AllNodes'), and(equals(parameters('availabilitySetOption'), 'Auto'), variables('hnRDMACapable')))]",
    "createCNInAVSet": "[or(or(equals(parameters('availabilitySetOption'), 'AllNodes'), equals(parameters('availabilitySetOption'), 'ComputeNodes')), and(equals(parameters('availabilitySetOption'), 'Auto'), variables('cnRDMACapable')))]",
    "vmPriority": "[if(equals(parameters('useSpotInstanceForComputeNodes'), 'Yes'), 'Spot', 'Regular')]",
    "certSecrets": [
      {
        "sourceVault": {
          "id": "[resourceId(variables('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', variables('vaultName'))]"
        },
        "vaultCertificates": [
          {
            "certificateUrl": "[parameters('certificateUrl')]",
            "certificateStore": "My"
          }
        ]
      }
    ],
    "headNodeImages": {
      "WindowsServer2012R2": {
        "publisher": "MicrosoftWindowsServerHPCPack",
        "offer": "WindowsServerHPCPack",
        "sku": "2016u3hn-ws2012r2",
        "version": "latest"
      },
      "WindowsServer2016": {
        "publisher": "MicrosoftWindowsServerHPCPack",
        "offer": "WindowsServerHPCPack",
        "sku": "2016u3hn-ws2016",
        "version": "latest"
      },
      "CustomImage": {
        "id": "[trim(parameters('headNodeImageResourceId'))]"
      }
    },
    "computeNodeImages": {
      "WindowsServer2008R2": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2008-R2-SP1",
        "version": "latest"
      },
      "WindowsServer2012": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-Datacenter",
        "version": "latest"
      },
      "WindowsServer2012R2": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      },
      "WindowsServer2016": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest"
      },
      "WindowsServer2019": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2019-Datacenter",
        "version": "latest"
      },
      "WindowsServer2012R2WithExcel": {
        "publisher": "MicrosoftWindowsServerHPCPack",
        "offer": "WindowsServerHPCPack",
        "sku": "2016U2CN-WS2012R2-Excel",
        "version": "latest"
      },
      "WindowsServer2016WithExcel": {
        "publisher": "MicrosoftWindowsServerHPCPack",
        "offer": "WindowsServerHPCPack",
        "sku": "2016U2CN-WS2016-Excel",
        "version": "latest"
      },
      "CustomImage": {
        "id": "[trim(parameters('computeNodeImageResourceId'))]"
      }
    },
    "headNodeImageRef": "[variables('headNodeImages')[parameters('headNodeOS')]]",
    "computeNodeImageRef": "[variables('computeNodeImages')[parameters('computeNodeImage')]]",
    "sharedResxBaseUrl": "https://raw.githubusercontent.com/Azure/hpcpack-template-2016/master/shared-resources"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Sql",
                  "locations": [
                    "[resourceGroup().location]"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "administratorLogin": "[parameters('sqlLoginName')]",
        "administratorLoginPassword": "[parameters('sqlLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "HPCManagement",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "HPCManagement"
          },
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "edition": "[split(parameters('ManagementDBServiceTier'), '_')[0]]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[split(parameters('ManagementDBServiceTier'), '_')[1]]"
          }
        },
        {
          "name": "HPCScheduler",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "HPCScheduler"
          },
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "edition": "[split(parameters('SchedulerDBServiceTier'), '_')[0]]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[split(parameters('SchedulerDBServiceTier'), '_')[1]]"
          }
        },
        {
          "name": "HPCReporting",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "HPCReporting"
          },
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "edition": "[split(parameters('ReportingDBServiceTier'), '_')[0]]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "107374182400",
            "requestedServiceObjectiveName": "[split(parameters('ReportingDBServiceTier'), '_')[1]]"
          }
        },
        {
          "name": "HPCDiagnostics",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "HPCDiagnostics"
          },
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "edition": "[split(parameters('DiagnosticsDBServiceTier'), '_')[0]]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "107374182400",
            "requestedServiceObjectiveName": "[split(parameters('DiagnosticsDBServiceTier'), '_')[1]]"
          }
        },
        {
          "name": "HPCMonitoring",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "HPCMonitoring"
          },
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "edition": "[split(parameters('MonitoringDBServiceTier'), '_')[0]]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "107374182400",
            "requestedServiceObjectiveName": "[split(parameters('MonitoringDBServiceTier'), '_')[1]]"
          }
        },
        {
          "type": "virtualNetworkRules",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "[concat(resourceGroup().name, '-', variables('virtualNetworkName'))]",
          "properties": {
            "virtualNetworkSubnetId": "[variables('subnetRef')]"
          }
        }
      ]
    },
    {
      "condition": "[equals(parameters('createPublicIPAddressForHeadNode'), 'Yes')]",
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('publicIPDNSNameLabel')]"
        }
      }
    },
    {
      "condition": "[equals(parameters('createPublicIPAddressForHeadNode'), 'Yes')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-HTTPS",
            "properties": {
              "description": "Allow Https",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-RDP",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-HPCSession",
            "properties": {
              "description": "Allow HPC Session service",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9090",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1020,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-HPCBroker",
            "properties": {
              "description": "Allow HPC Broker service",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9087",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1030,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-HPCBrokerWorker",
            "properties": {
              "description": "Allow HPC Broker worker",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9091",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1040,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-HPCDataService",
            "properties": {
              "description": "Allow HPC Data service",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9094 ",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1050,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicNameHN')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.4",
              "publicIPAddress": "[if(equals(parameters('createPublicIPAddressForHeadNode'), 'Yes'), variables('publicIpAddressId') , json('null'))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": "[if(equals(parameters('createPublicIPAddressForHeadNode'), 'Yes'), variables('networkSecurityGroupId') , json('null'))]",
        "enableAcceleratedNetworking": "[equals(parameters('enableAcceleratedNetworking'), 'Yes')]"
      }
    },
    {
      "condition": "[or(variables('createHNInAVSet'), variables('createCNInAVSet'))]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2
      }
    },
    {
      "apiVersion": "2019-03-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('clusterName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameHN'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(variables('createHNInAVSet'), variables('availabilitySet'), json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('headNodeVMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('clusterName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": false
          },
          "secrets": "[variables('certSecrets')]"
        },
        "storageProfile": {
          "imageReference": "[variables('headNodeImageRef')]",
          "osDisk": {
            "name": "[concat(variables('clusterName'), '-osdisk')]",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('diskTypes')[parameters('headNodeOsDiskType')]]"
            }
          },
          "dataDisks": "[if(equals(parameters('headNodeDataDiskCount'), 0), variables('emptyArray'), variables('headNodeDataDisks').hnDataDisks)]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'), variables('uniqueNicSuffix')))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2019-03-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('clusterName'),'/setupHpcHeadNode')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('clusterName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.80",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "[concat(variables('sharedResxBaseUrl'),'/CreateADPDC.ps1.zip')]",
            "script": "CreateADPDC.ps1",
            "function": "CreateADPDC"
          },
          "configurationArguments": {
            "DomainName": "[variables('domainName')]"
          }
        },
        "protectedSettings": {
          "configurationArguments": {
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "[parameters('adminPassword')]"
            }
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "name": "getVNetName",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
          ],
          "outputs": {
            "virtualNetworkName": {
              "type": "string",
              "value": "[variables('virtualNetworkName')]"
            }
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "name": "updateVNetDNS",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('clusterName'), '/extensions/setupHpcHeadNode')]",
        "getVNetName"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2019-04-01",
              "name": "[reference('getVNetName').outputs.virtualNetworkName.value]",
              "type": "Microsoft.Network/virtualNetworks",
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('addressPrefix')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": [
                    "10.0.0.4",
                    "8.8.8.8"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet1Name')]",
                    "properties": {
                      "addressPrefix": "[variables('subnet1Prefix')]",
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.Sql",
                          "locations": [
                            "[resourceGroup().location]"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[and(variables('createHNInAVSet'), variables('hnRDMACapable'))]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('clusterName'),'/installInfiniBandDriver')]",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "updateVNetDNS"
      ],
      "properties": {
        "publisher": "Microsoft.HpcCompute",
        "type": "InfiniBandDriverWindows",
        "typeHandlerVersion": "1.2",
        "autoUpgradeMinorVersion": true
      }
    },
    {
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "name": "getHeadNodeExtensionName",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
          ],
          "outputs": {
            "extensionName": {
              "type": "string",
              "value": "setupHpcHeadNode"
            }
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "name": "installHpcHeadNode",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('clusterName'), '/extensions/installInfiniBandDriver')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "getHeadNodeExtensionName"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "name": "[concat(variables('clusterName'),'/', reference('getHeadNodeExtensionName').outputs.extensionName.value)]",
              "apiVersion": "2019-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.80",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "configuration": {
                    "url": "[concat(variables('sharedResxBaseUrl'),'/InstallHpcSingleHeadNode.ps1.zip')]",
                    "script": "InstallHpcSingleHeadNode.ps1",
                    "function": "InstallHpcSingleHeadNode"
                  },
                  "configurationArguments": {
                    "SQLServerInstance": "[reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName]",
                    "SSLThumbprint": "[variables('certThumbprint')]",
                    "CNSize": "[parameters('computeNodeVMSize')]",
                    "SubscriptionId": "[subscription().subscriptionId]",
                    "VNet": "[variables('virtualNetworkName')]",
                    "Subnet": "[variables('subnet1Name')]",
                    "Location": "[resourceGroup().location]",
                    "ResourceGroup": "[resourceGroup().name]",
                    "VaultResourceGroup": "[variables('vaultResourceGroup')]",
                    "CertificateUrl": "[parameters('CertificateUrl')]",
                    "CNNamePrefix": "[variables('computeNodeNamePrefix')]"
                  }
                },
                "protectedSettings": {
                  "configurationArguments": {
                    "SetupUserCredential": {
                      "UserName": "[concat(variables('domainName'), '\\', parameters('adminUsername'))]",
                      "Password": "[parameters('adminPassword')]"
                    },
                    "AzureStorageConnString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'), '2019-04-01').keys[0].value)]",
                    "SqlLoginCredential": {
                      "UserName": "[parameters('sqlLoginName')]",
                      "Password": "[parameters('sqlLoginPassword')]"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('create', variables('computeNodeNamePrefix'), padLeft(string(copyIndex()), 3, '0'))]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "Microsoft.Resources/deployments/updateVNetDNS"
      ],
      "copy": {
        "name": "CN",
        "count": "[parameters('computeNodeNumber')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('sharedResxBaseUrl'), '/computenode.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "vmName": {
            "value": "[concat(variables('computeNodeNamePrefix'), padLeft(string(copyIndex()), 3, '0'))]"
          },
          "vmSize": {
            "value": "[parameters('computeNodeVMSize')]"
          },
          "osDiskType": {
            "value": "[variables('diskTypes')[parameters('computeNodeOsDiskType')]]"
          },
          "dataDiskSizeInGB": {
            "value": "[parameters('computeNodeDataDiskSize')]"
          },
          "dataDiskCount": {
            "value": "[parameters('computeNodeDataDiskCount')]"
          },
          "dataDiskType": {
            "value": "[variables('diskTypes')[parameters('computeNodeDataDiskType')]]"
          },
          "imageReference": {
            "value": "[variables('computeNodeImageRef')]"
          },
          "imageOsPlatform": {
            "value": "windows"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "availabilitySetName": {
            "value": "[if(variables('createCNInAVSet'), variables('availabilitySetName'), '')]"
          },
          "vmPriority": {
            "value": "[variables('vmPriority')]"
          },
          "installRDMADriver": {
            "value": "[and(variables('createCNInAVSet'), variables('cnRDMACapable'))]"
          },
          "enableAcceleratedNetworking": {
            "value": "[equals(parameters('enableAcceleratedNetworking'), 'Yes')]"
          },
          "secrets": {
            "value": "[variables('certSecrets')]"
          },
          "certThumbprint": {
            "value": "[variables('certThumbprint')]"
          },
          "headNodeList": {
            "value": "[variables('clusterName')]"
          },
          "joinDomain": {
            "value": true
          },
          "domainName": {
            "value": "[variables('domainName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "clusterDNSName": {
      "type": "string",
      "value": "[if(equals(parameters('createPublicIPAddressForHeadNode'), 'No'), variables('privateClusterFQDN'), reference(variables('publicIpAddressId').id, '2019-04-01').dnsSettings.fqdn)]"
    }
  }
}